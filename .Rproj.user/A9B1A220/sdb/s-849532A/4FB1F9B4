{
    "contents" : "\n#' Show all cancer cell line identifier present in the database for a selected reference Genome\n#' @export\nshow_contained_cls = function( ref_gen = \"GRCH37\", distinct_mode = T ){\n\n  suppressPackageStartupMessages(library(\"plyr\"))\n  suppressPackageStartupMessages(library(\"dplyr\"))\n  suppressPackageStartupMessages(library(\"stringr\"))\n    \n  package_path      = system.file(\"\", package=\"Uniquorn\")\n  database_path   =  paste( package_path, \"uniquorn_distinct_panels_db.sqlite3\", sep =\"/\" )\n  \n  if (!distinct_mode)\n    database_path   =  paste( package_path, \"uniquorn_non_distinct_panels_db.sqlite3\", sep =\"/\" )\n  \n  sim_list_stats = as.data.frame( tbl( src_sqlite( database_path ), \"sim_list_stats_df\" ), n = -1 )\n\n  sim_list_stats = sim_list_stats[ sim_list_stats$Ref_Gen == ref_gen,  ]\n  print( paste0( c(\"Found \", dim(sim_list_stats)[1], \" many cancer cell lines fingerprints for reference genome \", ref_gen ), collapse = \"\"  )  )\n  \n  print( summary( sim_list_stats ) )\n  \n  return( sim_list_stats )  \n}\n\n#' Show all mutations present in the database for a selected reference Genome\n#' @export\nshow_contained_mutations = function( ref_gen = \"GRCH37\", distinct_mode = T ){\n  \n  suppressPackageStartupMessages(library(\"plyr\"))\n  suppressPackageStartupMessages(library(\"dplyr\"))\n  suppressPackageStartupMessages(library(\"stringr\"))\n  \n  package_path      = system.file(\"\", package=\"Uniquorn\")\n  database_path   =  paste( package_path, \"uniquorn_distinct_panels_db.sqlite3\", sep =\"/\" )\n  \n  if (!distinct_mode)\n    database_path   =  paste( package_path, \"uniquorn_non_distinct_panels_db.sqlite3\", sep =\"/\" )\n  \n  sim_list = as.data.frame( tbl( src_sqlite( database_path ), \"sim_list_df\" ), n = -1 )\n  \n  sim_list       = sim_list[ sim_list$Ref_Gen == ref_gen,  ]\n  print( paste0( c(\"Found \", dim(sim_list)[1], \" many cancer cell lines associated mutations for reference genome \", ref_gen ), collapse = \"\"  )  )\n  \n  print( summary( sim_list ) )\n  \n  return( sim_list )  \n}\n\n#' Show all mutations present in the database for a selected cancer cell line and reference Genome\n#' @export\nshow_contained_mutations_for_cl = function( cl_name, ref_gen = \"HG19\", distinct_mode = T){\n  \n  suppressPackageStartupMessages(library(\"plyr\"))\n  suppressPackageStartupMessages(library(\"dplyr\"))\n  suppressPackageStartupMessages(library(\"stringr\"))\n  \n  package_path      = system.file(\"\", package=\"Uniquorn\")\n  database_path   =  paste( package_path, \"uniquorn_distinct_panels_db.sqlite3\", sep =\"/\" )\n  \n  if (!distinct_mode)\n    database_path   =  paste( package_path, \"uniquorn_non_distinct_panels_db.sqlite3\", sep =\"/\" )\n  sim_list = as.data.frame( tbl( src_sqlite( database_path ), \"sim_list_df\" ), n = -1 )\n  \n  sim_list = sim_list[ sim_list$Ref_Gen == ref_gen,  ]\n  mapping  = which( sim_list$CL %in% cl_name, arr.ind = T  )\n  sim_list = sim_list[ mapping,  ]\n  \n  if ( length( mapping ) == 0  ){\n    \n    message(paste0(\"Could not find the cancer cell line \",cl_name, \" in the database.\"), collapse= \"\")\n    \n  } else {\n    \n    print( paste0( c(\"Found \", dim(sim_list)[1], \" many mutations for cancer cell line\", cl_name  ,\" for reference genome \", ref_gen ), collapse = \"\"  )  )\n    \n    print( summary( sim_list ) )  \n  }\n  \n  sim_list = sim_list[ mapping, ]\n  return(sim_list)\n}\n\n#' Show all cancer cell lines in the database which contained the specified mutation and reference Genome. Closed interval coordinates. Format mutation: CHR_START_STOP, e.g. 1_123_123\n#' @export\nshow_which_cls_contain_mutation = function( mutation_name, ref_gen = \"GRCH37\"){\n  \n  suppressPackageStartupMessages(library(\"plyr\"))\n  suppressPackageStartupMessages(library(\"dplyr\"))\n  suppressPackageStartupMessages(library(\"stringr\"))\n  \n  db_folder      = system.file(\"\", package=\"Uniquorn\")\n  database_path  =  paste( db_folder, \"uniquorn_db.sqlite3\", sep =\"/\" )\n  sim_list = as.data.frame( tbl( src_sqlite( database_path ), \"sim_list_df\" ), n = -1 )\n  \n  sim_list = sim_list[ sim_list$Ref_Gen == ref_gen,  ]\n  mapping  = which( sim_list$Fingerprint %in% mutation_name, arr.ind = T)\n  sim_list = sim_list[ mapping,  ]\n  \n  if ( length( mapping ) == 0  ){\n    \n    message(paste0(\"Could not find any cancer cell line for the mutation \",mutation_name, \" in the database.\"), collapse= \"\")\n    \n  } else {\n    \n    print( paste0( c(\"Found \", dim( sim_list )[1], \" many cancer cell lines for mutation \", mutation_name  ,\" for reference genome \", ref_gen ), collapse = \"\"  )  )\n    \n    print(sim_list)\n    print( summary( sim_list ) )  \n  }\n  \n  return( sim_list )  \n}",
    "created" : 1452595374185.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "795211380",
    "id" : "4FB1F9B4",
    "lastKnownWriteTime" : 1452592787,
    "path" : "C:/Users/raik_000/Dropbox/PhD/Uniquorn_project/Uniquorn/R/Show_database_information.R",
    "project_path" : "R/Show_database_information.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}